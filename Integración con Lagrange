import math as mt
import numpy as np

h=0.1
l=int(5/h)

def lagrangeb2(x,idx,x_at):
    l=np.prod([(x_at-j)/(x[idx]-j) if idx!=i else 1 for i,j in enumerate(x)])
    return l

def lagrange2(x,y,x_at):
    L=sum([j*lagrangeb2(x,i,x_at) for i,j in enumerate(y)])
    return L

def normal_den(x):
    return (1/mt.sqrt(2*mt.pi))*mt.exp(-0.5*mt.pow(x,2))

grid=[-4+h*i for i in range(l)]
f_x=[normal_den(i) for i in grid]
punto_m=[normal_den(i+h/2) for i in grid]

#print(punto_m)


#-(x+2.5)^2+4
def f(x):
    return -mt.pow(x,2)-x*5-2.25

f_x=[-2.25,-5,-1]

def integrar(izq,der,f):
    d=iz=0
    F=[0 for i in range(len(f)+1)]
    for i in range(len(f)):
        F[i+1]=f[i]/(i+1)
    print(F)
    for i in range(len(F)):
        d+=F[i]*mt.pow(der,i)
        iz+=F[i]*mt.pow(izq,i)
    return d-iz

print(integrar(-4.5,-0.5,f_x))
